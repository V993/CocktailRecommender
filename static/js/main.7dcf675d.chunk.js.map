{"version":3,"sources":["components/RandomCocktail.js","components/CocktailSearch.js","components/IngredientSearch.js","components/CategoryCocktail.js","components/ListCategories.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["RandomCocktail","props","handleSearchClick","a","axios","get","response","setState","apiData","data","found","console","log","status","makeTable","currData","state","foundMatch","table","drinks","name","strDrink","alcoholic","strAlcoholic","instructions","strInstructions","image","strDrinkThumb","ingredients","amounts","Object","entries","key","value","includes","push","colspan","src","alt","i","forEach","ingredient","this","className","onClick","id","Component","CocktailSearch","handleInputChange","event","cocktailName","target","handleClick","alert","linkToAPI","length","error","objIsEmpty","obj","keys","drink","type","onChange","placeholder","IngredientSearch","city","CategorySearch","category","API","cate","ListCategories","strCategory","Navigation","selected","width","updateWindowDimensions","bind","chooseRandom","e","chooseCocktailSearch","chooseIngredientSearch","chooseGetAllCategories","chooseSearchCategories","window","addEventListener","removeEventListener","innerWidth","height","innerHeight","cocktailContent","CategoryCocktail","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dcf675d.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass RandomCocktail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiData: [],\r\n      found: false,\r\n    };\r\n  }\r\n\r\n  handleSearchClick = async () => {\r\n    let linkToAPI = \"https://www.thecocktaildb.com/api/json/v1/1/random.php\";\r\n    try {\r\n      let response = await axios.get(linkToAPI);\r\n      this.setState({ apiData: response.data, found: true });\r\n    } catch (error) {\r\n      if (error.response) {\r\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\r\n        console.log(error.response.data); //Not Found\r\n        console.log(error.response.status); //404\r\n        this.setState({ found: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  makeTable = () => {\r\n    \r\n    let currData = this.state.apiData;\r\n    let foundMatch = this.state.found;\r\n    let table = [];\r\n    //found is false when we get 404 error\r\n    if (!foundMatch) {\r\n      table.push(\r\n        <tr>\r\n          <td>Become an alcoholic!</td>\r\n        </tr>\r\n      );\r\n      return table;\r\n    } else {\r\n      console.log(currData.drinks[0]);\r\n      let name = currData.drinks[0].strDrink;\r\n      let alcoholic = currData.drinks[0].strAlcoholic;\r\n      let instructions = currData.drinks[0].strInstructions;\r\n      let image = currData.drinks[0].strDrinkThumb;\r\n      let ingredients = [];\r\n      let amounts = [];\r\n\r\n      for (const [key, value] of Object.entries(currData.drinks[0])) {\r\n        // console.log(`${key}: ${value}`);\r\n        if (key.includes(\"strIngredient\") && value != null)\r\n          ingredients.push(value);\r\n        if (key.includes(\"strMeasure\") && value != null) amounts.push(value);\r\n      }\r\n\r\n      table.push(\r\n        <tr>\r\n          <td colspan=\"2\">\r\n            {name} ({alcoholic})\r\n          </td>\r\n        </tr>\r\n      );\r\n      table.push(\r\n        <tr>\r\n          <td colspan=\"2\">\r\n            <img src={image + \"/preview\"} alt=\"Drink\" />\r\n          </td>\r\n        </tr>\r\n      );\r\n      table.push(\r\n        <tr>\r\n          <td colspan=\"2\">{instructions}</td>\r\n        </tr>\r\n      );\r\n      table.push(\r\n        <tr>\r\n          <td>Ingredient:</td>\r\n          <td>Amount:</td>\r\n        </tr>\r\n      );\r\n      let i = 0;\r\n      ingredients.forEach((ingredient) => {\r\n        if (ingredient)\r\n          table.push(\r\n            <tr>\r\n              <td>{ingredient}</td>\r\n              <td>{amounts[i++]}</td>\r\n            </tr>\r\n          );\r\n      });\r\n      return table;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleSearchClick()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">  \r\n        <div className=\"containerOverlay\">\r\n          <button className=\"beeg-button\" onClick={this.handleSearchClick}>\r\n            <h1 id=\"title\">Random Cocktail Generator</h1>\r\n          </button>\r\n        </div>\r\n        <br></br>\r\n\r\n        <table id=\"drink\">\r\n          <tbody>{this.makeTable()}</tbody>\r\n        </table>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomCocktail;\r\n","import { Component } from \"react\";\nimport axios from \"axios\";\n\nclass CocktailSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiData: [],\n      found: false,\n      cocktailName: \"\",\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ cocktailName: event.target.value });\n  };\n\n  handleClick = async () => {\n    console.log(\"you've been duped\");\n    alert(\"enter cocktail name!\");\n  };\n\n  handleSearchClick = async () => {\n    let cocktailName = this.state.cocktailName;\n    let linkToAPI =\n      \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\" +\n      cocktailName;\n    //trying to catch empty strings\n    if (cocktailName.length === 0) {\n      alert(\"Please enter a cocktail name\");\n      this.setState({ found: false });\n      return console.error(\"no input found\");\n    }\n\n    try {\n      let response = await axios.get(linkToAPI);\n      this.setState({ apiData: response.data, found: true });\n    } catch (error) {\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.log(error.response.data); //Not Found\n        console.log(error.response.status); //404\n      }\n    }\n  };\n\n  objIsEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n  };\n\n  objIsEmpty = (obj) => Object.keys(obj).length === 0;\n\n  makeTable = () => {\n    let currData = this.state.apiData;\n    let foundMatch = this.state.found;\n    let table = [];\n    console.log(currData);\n    //found is false when we get 404 error\n    if (!foundMatch) {\n      table.push(\n        <tr key={-3}>\n          <td>Discover new cocktails</td>\n        </tr>\n      );\n      return table;\n    } else {\n      // console.log(currData.drinks[0]);\n      if (currData.drinks.length > 0 && !this.objIsEmpty(currData)) {\n        let ingredients = [];\n        let amounts = [];\n\n        for (const [key, value] of Object.entries(currData.drinks[0])) {\n          // console.log(`${key}: ${value}`);\n          if (key.includes(\"strIngredient\"))\n            if (value != null) ingredients.push(value);\n\n          if (key.includes(\"strMeasure\"))\n            if (value != null) amounts.push(value);\n        }\n\n        currData.drinks.forEach((drink) => {\n          table.push(\n            <tr>\n              <td colspan=\"2\">\n                <img src={drink.strDrinkThumb + \"/preview\"} alt={ingredients} />\n              </td>\n            </tr>\n          );\n\n          table.push(\n            <tr>\n              <td colspan=\"2\">\n                {\" \"}\n                <b>{drink.strDrink} </b>{\" \"}\n              </td>\n            </tr>\n          );\n\n          table.push(\n            <tr>\n              <td colspan=\"2\">{drink.strInstructions}</td>\n            </tr>\n          );\n\n          table.push(\n            <tr>\n              <td>Ingredients:</td>\n              <td>Amount:</td>\n            </tr>\n          );\n          let i = 0;\n          ingredients.forEach((ingredient) => {\n            if (ingredient)\n              table.push(\n                <tr>\n                  <td>{ingredient}</td>\n                  <td>{amounts[i]}</td>\n                </tr>\n              );\n            i++;\n          });\n        });\n        // let name = currData.drinks[0].strDrink;\n        // let alcoholic = currData.drinks[0].strAlcoholic;\n        // table.push(\n        //     <tr>\n        //         <td> { name } : { alcoholic } </td>\n        //     </tr>\n\n        // )\n        return table;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"containerOverlay\">\n          <button className=\"beeg-button\" onClick={this.handleClick}>\n            <h1 id=\"title\"> Search Cocktail by Name : </h1>\n          </button>\n          <br></br>\n        </div>\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            value={this.state.cocktailName}\n            onChange={this.handleInputChange}\n            placeholder=\"Enter cocktail\"\n          />\n\n          <button className=\"search-button\" onClick={this.handleSearchClick}>\n            Search\n          </button>\n        </div>\n        <br />\n\n        <table id=\"drink\">\n          <tbody>{this.makeTable()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default CocktailSearch;\n","import { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass IngredientSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiData: [],\r\n      ingredient: \"\",\r\n      found: false,\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ ingredient: event.target.value });\r\n  };\r\n\r\n  handleClick = async () => {\r\n    console.log(\"you've been duped\");\r\n    alert(\"enter your ingredient below!\");\r\n  };\r\n\r\n  handleSearchClick = async () => {\r\n    let ingredient = this.state.ingredient;\r\n    let linkToAPI =\r\n      \"https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=\" + ingredient;\r\n\r\n    if (ingredient.length === 0) alert(\"Please enter an ingredient.\");\r\n\r\n    try {\r\n      let response = await axios.get(linkToAPI);\r\n      this.setState({ apiData: response.data, found: true });\r\n    } catch (error) {\r\n      if (error.response) {\r\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\r\n        console.log(error.response.data); //Not Found\r\n        console.log(error.response.status); //404\r\n        this.setState({ found: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  objIsEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\n  makeTable = () => {\r\n    let currData = this.state.apiData;\r\n    let foundMatch = this.state.found;\r\n    let table = [];\r\n    //found is false when we get 404 error or do not find a match\r\n    if (!foundMatch) {\r\n      table.push(\r\n        <tr key={-3}>\r\n          <td>Discover your inner alcoholism!</td>\r\n        </tr>\r\n      );\r\n      return table;\r\n    } else {\r\n      console.log(currData);\r\n      if (currData.drinks.length > 0 && !this.objIsEmpty(currData)) {\r\n        currData.drinks.forEach((drink) => {\r\n          console.log(\"adding \", drink.strDrink);\r\n          table.push(\r\n            <tr>\r\n              <td>{drink.strDrink}</td>\r\n            </tr>\r\n          );\r\n        });\r\n        return table;\r\n      }\r\n      else {\r\n        console.log('something is wrong homie');\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"containerOverlay\">\r\n          <button className=\"beeg-button\" onClick={this.handleClick}>\r\n            <h1 id=\"title\">Find a Cocktail by ingredient:</h1>\r\n          </button>\r\n          <br></br>\r\n        </div>\r\n\r\n        <div className=\"search\">\r\n          <input\r\n            className=\"search-bar\"\r\n            type=\"text\"\r\n            value={this.state.city}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Enter ingredient:\"\r\n          />\r\n          <button className=\"search-button\" onClick={this.handleSearchClick}>\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <table id=\"drink\">\r\n          <tbody>{this.makeTable()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IngredientSearch;\r\n","import { Component } from \"react\";\nimport axios from \"axios\";\n\nclass CategorySearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiData: [],\n      category: \"\",\n      found: false,\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ category: event.target.value });\n  };\n\n  handleClick = async () => {\n    console.log(\"undefined\");\n    alert(\"Enter your category below!\");\n  };\n\n  handleSearchClick = async () => {\n    let category = this.state.category;\n    let API =\n      \"https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=\" + category;\n\n    if (category.length === 0) alert(\"Please enter a category.\");\n\n    try {\n      let response = await axios.get(API);\n      this.setState({ apiData: response.data, found: true });\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data); //Not Found\n        console.log(error.response.status); //404\n        this.setState({ found: false });\n      }\n    }\n  };\n\n  objIsEmpty = (obj) => Object.keys(obj).length === 0;\n\n  makeTable = () => {\n    let currData = this.state.apiData;\n    let foundMatch = this.state.found;\n    let table = [];\n    //found is false when we get 404 error or do not find a match\n    if (!foundMatch) {\n      table.push(\n        <tr key={-3}>\n          <td>What would you like?</td>\n        </tr>\n      );\n      return table;\n    } else {\n      console.log(currData);\n      if (currData.length > 0 && !this.objIsEmpty(currData)) {\n        currData.drinks.forEach((cate) => {\n          table.push(\n            <tr>\n              <td>{cate.strDrink}</td>\n            </tr>\n          );\n        });\n        return table;\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"containerOverlay\">\n          <button className=\"beeg-button\" onClick={this.handleClick}>\n            <h1 id=\"title\">Find a Cocktail by category:</h1>\n          </button>\n          <br></br>\n        </div>\n\n        <div className=\"search\">\n          <input\n            className=\"search-bar\"\n            type=\"text\"\n            value={this.state.city}\n            onChange={this.handleInputChange}\n            placeholder=\"Enter category:\"\n          />\n          <button className=\"search-button\" onClick={this.handleSearchClick}>\n            Search\n          </button>\n        </div>\n\n        <table id=\"drink\">\n          <tbody>{this.makeTable()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default CategorySearch;\n","import { Component } from \"react\";\nimport axios from \"axios\";\n\nclass ListCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiData: [],\n      found: false,\n    };\n  }\n\n  handleSearchClick = async () => {\n    let API = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\n    try {\n      let response = await axios.get(API);\n      this.setState({ apiData: response.data, found: true });\n    } catch (error) {\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.log(error.response.data); //Not Found\n        console.log(error.response.status); //404\n        this.setState({ found: false });\n      }\n    }\n  };\n\n  makeTable = () => {\n    let currData = this.state.apiData;\n    let foundMatch = this.state.found;\n    let table = [];\n    //found is false when we get 404 error\n    if (!foundMatch) {\n      table.push(\n        <tr>\n          <td>Categories!</td>\n        </tr>\n      );\n      return table;\n    } else {\n      let i = 0;\n      currData.drinks.forEach((cate) => {\n        if (cate) {\n          let category = currData.drinks[i].strCategory;\n          table.push(\n            <tr>\n              <td>{category}</td>\n            </tr>\n          );\n          i++;\n        }\n      });\n      return table;\n    }\n  };\n\n  componentDidMount() {\n    this.handleSearchClick()\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"containerOverlay\">\n          <button className=\"beeg-button\" onClick={this.handleSearchClick}>\n            <h1 id=\"title\">All categories of Alcohol : </h1>\n          </button>\n        </div>\n        <br></br>\n\n        <table id=\"drink\">\n          <tbody>{this.makeTable()}</tbody>\n        </table>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default ListCategories;\n","import RandomCocktail from \"./RandomCocktail\";\nimport CocktailSearch from \"./CocktailSearch\";\nimport IngredientSearch from \"./IngredientSearch\";\nimport CategoryCocktail from \"./CategoryCocktail\";\nimport ListCategories from \"./ListCategories\";\n\nimport { Component } from 'react';\n\nclass Navigation extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      selected: \"random\",\n      width: 0\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    this.chooseRandom = (e) => {this.setState({ selected: \"random\" })};\n    this.chooseCocktailSearch = (e) => {this.setState({ selected: \"searchCocktails\" })};\n    this.chooseIngredientSearch = (e) => {this.setState({ selected: \"searchIngredient\" })};\n    this.chooseGetAllCategories = (e) => {this.setState({ selected: \"getIngredients\" })};\n    this.chooseSearchCategories = (e) => {this.setState({ selected: \"searchCategories\" })};\n\n    \n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  render() {\n\n    const cocktailContent = \n      <div className=\"center\">\n        {\n          this.state.selected === \"random\" ? (\n            <div>\n              <RandomCocktail />\n            </div>\n          ) : \n          // check next state\n          this.state.selected === \"searchCocktails\" ? (\n            <div>\n              <CocktailSearch />\n            </div>\n          ) : \n          // check next state\n          this.state.selected === \"searchIngredient\" ? (\n            <div>\n              <IngredientSearch />\n            </div>\n          ) : \n          // check next state\n          this.state.selected === \"getIngredients\" ? (\n            <div>\n              <ListCategories />\n            </div>\n          ) : \n          // check next state      \n          this.state.selected === \"searchCategories\" ? (\n            <div>\n              <CategoryCocktail />\n            </div>\n          ) : (<div>Err. Unsupported Extension.</div>)\n        }                                     \n      </div>\n    \n    let width = this.state.width\n    if (width > 800) {\n      return (\n        <div className=\"full\">\n          <div className=\"navbar\">\n            <div className=\"navItem\" onClick={this.chooseRandom}>\n              <li id=\"beegLetter\">Random Cocktail</li>\n            </div>\n            <div className=\"navItem\" onClick={this.chooseCocktailSearch}>\n              <li id=\"beegLetter\">Cocktail Search</li>\n            </div>\n            <div className=\"navItem\" onClick={this.chooseIngredientSearch}>\n              <li id=\"beegLetter\">Ingredient Search</li>\n            </div>\n            <div className=\"navItem\" onClick={this.chooseGetAllCategories}>\n              <li id=\"beegLetter\">All Categories</li>\n            </div>\n            <div className=\"navItem\" onClick={this.chooseSearchCategories}>\n              <li id=\"beegLetter\">Cocktail Category Search</li>\n            </div>\n          </div>\n          <div className=\"cocktails\">\n            <br></br>\n            <br></br>\n            {cocktailContent}\n          </div>\n        </div>\n      );\n    } else {\n      return(\n        <div class=\"container\">\n          <div class=\"wrapper\">\n            <RandomCocktail />\n            <CocktailSearch />\n            <IngredientSearch />\n            <ListCategories />\n            <CategoryCocktail />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Navigation;\n","import \"./App.css\";\nimport { Navigation } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}